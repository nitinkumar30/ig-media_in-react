{"version":3,"sources":["Media/profile-icon.svg","Media/post-icon.svg","Media/reel-icon.svg","Media/story-icon.svg","Media/igtv-icon.svg","Media/feed.svg","components/Header/NavigationMenu.jsx","components/Header/Header.jsx","components/LoadingAnimation.jsx","components/Header/SearchForm.jsx","components/LoadedResponses/LoadedProfile.jsx","components/device.jsx","components/Profile.jsx","components/LoadedResponses/LoadedStory.jsx","components/Story.jsx","components/LoadedResponses/LoadedReels.jsx","components/Reels.jsx","components/LoadedResponses/LoadedPost.jsx","components/Post.jsx","components/LoadedResponses/LoadedIgtv.jsx","components/Igtv.jsx","Media/heart.svg","Media/plays.svg","components/LoadedResponses/LoadedFeed.jsx","components/Feed.jsx","components/Error.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["NavigationMenu","to","className","activeClassName","src","feed","alt","ProfileIco","StoryIco","ReelIco","PostIco","IgtvIco","Nav","styled","a","div","Logo","Hamburger","isOpen","Container","Header","useState","setIsOpen","href","style","fontSize","onClick","LoadingAnimation","class","SearchForm","props","action","onSubmit","submitHandler","type","onChange","onChangehandler","placeholder","value","LoadedProfile","responseObj","error_code","message","profile_pic_url_hd","media_count","follower_count","following_count","username","full_name","biography","target","hd_profile_pic_url_info","url","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","CardWrapper","Head","Image","img","Content","Heading","Para","Profile","userId","setUserId","setResponseObj","isLoading","setIsLoading","hasLoaded","setHasLoaded","id","fetch","method","headers","response","json","data","error","console","log","e","preventDefault","length","fetchProfile","alert","LoadedStory","storyArray","story","profile_pic_url","map","element","index","media_type","controls","video_versions","image_versions2","candidates","Story","LoadedReels","items","user","download","Reels","reelUrl","setReelUrl","getId","slice","reelId","fetchReel","LoadedPost","carousel_media","caption","text","Post","postUrl","setPostUrl","postId","fetchPost","LoadedIgtv","Igtv","igtvUrl","setIgtvUrl","igtvId","LoadedFeed","Plays","play_count","Heart","like_count","comment_count","Feed","Error","Mains","Cards","ul","CardItem","li","CardImage","Images","Card","CardContent","CardTitle","h2","CardText","p","Footers","Wrapper","Small","FooterNav","FooterLink","Footer","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91a37f3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile-icon.069a2757.svg\";","export default __webpack_public_path__ + \"static/media/post-icon.586f6f67.svg\";","export default __webpack_public_path__ + \"static/media/reel-icon.9f8f639f.svg\";","export default __webpack_public_path__ + \"static/media/story-icon.4e049e09.svg\";","export default __webpack_public_path__ + \"static/media/igtv-icon.1e027e0f.svg\";","export default __webpack_public_path__ + \"static/media/feed.1b2e5222.svg\";","import { NavLink } from \"react-router-dom\";\n\nimport ProfileIco from \"../../Media/profile-icon.svg\";\n\nimport PostIco from \"../../Media/post-icon.svg\";\nimport ReelIco from \"../../Media/reel-icon.svg\";\nimport StoryIco from \"../../Media/story-icon.svg\";\nimport IgtvIco from \"../../Media/igtv-icon.svg\";\nimport feed from \"../../Media/feed.svg\";\nconst NavigationMenu = () => {\n    return (\n        <>\n        <NavLink\n        to=\"/igvio/feed\"\n        className=\"nav-buttons\"\n        activeClassName=\"active-navigation\"\n    >\n        <img src={feed} className=\"nav-icons\" alt=\"search Igtv\" />\n        <p className=\"nav-name\">  Stalker </p>\n    </NavLink>\n            <NavLink\n                to=\"/igvio/profile\"\n                className=\"nav-buttons\"\n                activeClassName=\"active-navigation\"\n            >\n                <img\n                    src={ProfileIco}\n                    className=\"nav-icons\"\n                    alt=\"search profile\"\n                />\n                <p className=\"nav-name\"> Profile </p>\n            </NavLink>\n\n            <NavLink\n                to=\"/igvio/story\"\n                className=\"nav-buttons\"\n                activeClassName=\"active-navigation\"\n            >\n                <img src={StoryIco} className=\"nav-icons\" alt=\"search Story\" />\n                <p className=\"nav-name\"> Story </p>\n            </NavLink>\n\n            <NavLink\n                to=\"/igvio/reel\"\n                className=\"nav-buttons\"\n                activeClassName=\"active-navigation\"\n            >\n                <img src={ReelIco} className=\"nav-icons\" alt=\"search Reel\" />\n                <p className=\"nav-name\"> Reel </p>\n            </NavLink>\n\n            <NavLink\n                to=\"/igvio/post\"\n                className=\"nav-buttons\"\n                activeClassName=\"active-navigation\"\n            >\n                <img src={PostIco} className=\"nav-icons\" alt=\"search Post\" />\n                <p className=\"nav-name\"> Post </p>\n            </NavLink>\n\n            <NavLink\n                to=\"/igvio/igtv\"\n                className=\"nav-buttons\"\n                activeClassName=\"active-navigation\"\n            >\n                <img src={IgtvIco} className=\"nav-icons\" alt=\"search Igtv\" />\n                <p className=\"nav-name\"> Igtv </p>\n            </NavLink>\n\n           \n        </>\n    );\n};\n\nexport default NavigationMenu;\n","import NavigationMenu from \"./NavigationMenu\";\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    return (\n        <>\n        <Container >\n<Nav>\n      <Logo href=\"\">\n        IGmediaDOWN<span style={{fontSize:'12px'}}>&nbsp;&nbsp;&nbsp;-By Nitin</span><span style={{fontSize:'8px'}}>\n          {/* &nbsp;(Instait V2) */}\n        </span>\n      </Logo>\n      <Hamburger onClick={() => setIsOpen(!isOpen)}>\n        <span />\n        <span />\n        <span />\n      </Hamburger>\n      {/* <Menu isOpen={isOpen}>\n       \n        <MenuLink href=\"https://fbit.herokuapp.com/\">Facebook Downloader</MenuLink>\n        <MenuLink href=\"https://utit.herokuapp.com/\">Youtube Downloader</MenuLink>\n        <MenuLink href=\"https://downitt.herokuapp.com/\">DailyMotion/Adult site Downloader</MenuLink>\n        <MenuLink href=\"https://scdit.herokuapp.com/\">Soundcloud Downloader</MenuLink>\n    \n      </Menu> */}\n    </Nav>\n\n</Container>\n            <header className=\"main-header\">\n                <article className=\"web-header\">\n                    <section className=\"logo-section\">\n                       \n                    </section>\n                    <h1 className=\"web-name\"> Instagram Downloader </h1>\n                </article>\n                <nav className=\"nav-section\">\n                    <NavigationMenu />\n                </nav>\n            </header>\n        </>\n    );\n};\n\nconst MenuLink = styled.a`\n  padding: 1rem 2rem;\n  cursor: pointer;\n  \n  text-align: center;\n  text-decoration: none;\n  color: #67bc98;\n  transition: all 0.3s ease-in;\n  font-size: 0.9rem;\n  &:hover {\n    background: linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%); \n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;\n  }\n`;\n\nconst Nav = styled.div`\n  padding: 0 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  background: white;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst Logo = styled.a`\n  padding: 1rem 0;\n  background: linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%); \n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;\n  text-decoration: none;\n  font-weight: 800;\n  font-size: 1.7rem;\n  span {\n    font-weight: 300;\n    font-size: 1.3rem;\n  }\n`;\n\nconst Menu = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  @media (max-width: 768px) {\n    overflow: hidden;\n    flex-direction: column;\n    max-height: ${({ isOpen }) => (isOpen ? \"300px\" : \"0\")};\n    transition: max-height 0.3s ease-in;\n    width: 100%;\n  }\n`;\n\nconst Hamburger = styled.div`\n  display: none;\n  flex-direction: column;\n  cursor: pointer;\n  span {\n    height: 2px;\n    width: 25px;\n    background: #7b7fda;\n    margin-bottom: 4px;\n    border-radius: 5px;\n  }\n  @media (max-width: 768px) {\n    display: flex;\n  }\n`;\n\n\n\n\nconst Container = styled.div`\nbackground-color:#0d1117;\n\ndisplay:grid;\nplace-items:center;\n\n  \n`;\nexport default Header;\n","\nimport './Styles/loadingAnimation.css';\nconst LoadingAnimation = () => {\n\n    return  (\n        <>\n           <div class=\"loader\">\n  <div class=\"inner one\"></div>\n  <div class=\"inner two\"></div>\n  <div class=\"inner three\"></div>\n</div>\n\n        </>\n    ); \n        \n}\n\nexport default LoadingAnimation;","import '../Styles/SearchForm.css';\n\nconst SearchForm = (props) => {\n    return (\n        <>\n            <form action=\"\" className=\"input-form\" onSubmit={props.submitHandler}>\n                <input\n                    type=\"text\"\n                    className=\"inputBox\"\n                    onChange={props.onChangehandler}\n                    placeholder={props.placeholder}\n                />\n                <input type=\"submit\" className=\"submitBtn\" value=\"Search\" />\n            </form>\n        </>) \n}\n\nexport default SearchForm;","const LoadedProfile = (props) => {\n    const responseObj = props.responseObj;\n    const responseError = responseObj.error_code;\n\n    if (responseError) {\n        return (\n            <div className=\"error-page\">\n                <h1>No such account found !</h1>\n                <p>{responseObj.message}</p>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <article className=\"profile-description\">\n                <div className=\"profile-header\">\n                    <img\n                        src={responseObj.profile_pic_url_hd}\n                        className=\"profile-picture\"\n                        alt=\"Profile\"\n                    />\n                    <section className=\"profile-counts\">\n                        <div className=\"media-count\">\n                            <h3>{responseObj.media_count}</h3>\n                            <p>Posts</p>\n                        </div>\n                        <div className=\"follower-count\">\n                            <h3>{responseObj.follower_count}</h3>\n                            <p>Followers</p>\n                        </div>\n                        <div className=\"following-count\">\n                            <h3>{responseObj.following_count}</h3>\n                            <p>Followings</p>\n                        </div>\n                    </section>\n                </div>\n            </article>\n            <section className=\"user-intro\">\n                <h3 className=\"username\">{responseObj.username}</h3>\n                <p className=\"fullname\">{responseObj.full_name}</p>\n                <p className=\"bio\">{responseObj.biography}</p>\n            </section>\n            <section className=\"profile-picture-container\">\n                <img\n                    src={responseObj.profile_pic_url_hd}\n                    className=\"fullsize-profile-picture\"\n                    alt=\"Fullsize\"\n                />\n                 <a className = \"buttonDownload\" target=\"_blank\" href={responseObj.hd_profile_pic_url_info.url} >View Profile Pic !!!</a>\n            </section>\n        </>\n    );\n};\n\nexport default LoadedProfile;\n","// Mobile S - 320px\r\n// Mobile M - 375px\r\n// Mobile L - 425px\r\n// Tablet - 768px\r\n// Laptop - 1024px\r\n// Laptop L - 1440px\r\n// 4K - 2560px\r\n\r\nconst size = {\r\n    mobileS: \"320px\",\r\n    mobileM: \"375px\",\r\n    mobileL: \"425px\",\r\n    tablet: \"768px\",\r\n    laptop: \"1024px\",\r\n    laptopL: \"1440px\",\r\n    desktop: \"2560px\"\r\n  };\r\n  \r\n  export const device = {\r\n    mobileS: `(min-width: ${size.mobileS})`,\r\n    mobileM: `(min-width: ${size.mobileM})`,\r\n    mobileL: `(min-width: ${size.mobileL})`,\r\n    tablet: `(min-width: ${size.tablet})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    laptopL: `(min-width: ${size.laptopL})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n    desktopL: `(min-width: ${size.desktop})`\r\n  };","import { useState } from \"react\";\nimport \"./Styles/profile.css\";\nimport LoadingAnimation from \"./LoadingAnimation\";\nimport SearchForm from \"./Header/SearchForm\";\nimport LoadedProfile from \"./LoadedResponses/LoadedProfile\";\nimport styled from \"styled-components\";\nimport { device } from \"./device\";\n\nconst Profile = (props) => {\n  const [userId, setUserId] = useState(\"\");\n  const [responseObj, setResponseObj] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  function submitHandler(e) {\n    e.preventDefault();\n    if (userId.length === 0) {\n      alert(\"Empty Username !\");\n      return;\n    }\n    setIsLoading(true);\n    fetchProfile();\n  }\n\n  function onChangehandler(e) {\n    setUserId(e.target.value);\n  }\n\n  async function fetchProfile() {\n    const id = userId;\n    const response = await fetch(\n      `https://instagram-bulk-profile-scrapper.p.rapidapi.com/clients/api/ig/ig_profile?response_type=full&ig=${id}&corsEnabled=true`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d80191008amsh24d66a7bd4dba75p1522dcjsn7c81675e726a\",\n          \"x-rapidapi-host\": \"instagram-bulk-profile-scrapper.p.rapidapi.com\",\n        },\n      }\n    );\n    const data = await response.json();\n    try {\n      setResponseObj(data[0]);\n    } catch (error) {\n      console.log(error.message);\n    }\n    setIsLoading(false);\n    setHasLoaded(true);\n  }\n\n  return (\n    <>\n      <section id=\"profile-section\">\n        <SearchForm\n          submitHandler={submitHandler}\n          onChangehandler={onChangehandler}\n          placeholder=\"Enter Username\"\n        />\n        <main className=\"profile-response\">\n          {isLoading && <LoadingAnimation />}\n          {hasLoaded && <LoadedProfile responseObj={responseObj} />}\n        </main>\n      </section>\n      <Head>Insta DP viewer</Head>\n      <CardWrapper>\n        <Image\n          src={`https://uttertechnology.com/wp-content/webpc-passthru.php?src=https://uttertechnology.com/wp-content/uploads/2021/09/acastro_190919_1777_instagram_0001.0.jpg&nocache=1`}\n        />\n        <Content>\n          <Heading>HD Profile Pic viewer</Heading>\n          <Para>\n          You have lots of friends on Instagram and you followed them and you see their photos or video easily but when you want to see their Instagram profile and want to save them in your phone gallery and try to download them but you can’t save them because Instagram didn’t allow directly to download Instagram profile picture in your phone gallery.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://1.bp.blogspot.com/-kXpnVoOgnUU/YUoveCZHDJI/AAAAAAAAK9U/W6CSrhWfelASNNpIQYHS0bA2kPEvXRR_QCNcBGAsYHQ/s1600/know-who-views-Instagram-profile.jpeg`}\n        />\n        <Content>\n          <Heading>Scrap Private Profile</Heading>\n          <Para>\n            Download Profile Photo, View No of Follower and following with Profile that not only works for public profile but also with private profile and download DP in HD format. Downloading is difficult until we didn’t launch our tool. Our tool is solving you all problem regarding downloading any Instagram DP\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://www.techprevue.com/wp-content/uploads/2020/07/can-someone-tell-if-you-look-at-their-instagram-1024x683.jpg`}\n        />\n        <Content>\n          <Heading>No signup/Login</Heading>\n          <Para>\n          So, here insta dp viewer helps you to save you memories by downloading Instagram profile picture and see when you want to miss them in your phone or you can also download your own old memories which you uploaded in past.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://verloop.io/wp-content/uploads/Instagram-API-The-Ultimate-Guide-1200x600.jpg`}\n        />\n        <Content>\n          <Heading>No Instagram API</Heading>\n          <Para>\n            This webapp uses Instagram Bulk Profile Scrapper from Rapid API\n            which allows limited No of Download Per Day i.e 250 Request Per day.\n            When I will have money Ill Buy premium version of the API but its\n            good for personal use.\n          </Para>\n        </Content>\n      </CardWrapper>\n    </>\n  );\n};\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid gray;\n  box-shadow: 5px 5px #ccc;\n  padding: 10px;\n  margin: 10px;\n  @media ${device.laptop} {\n    flex-direction: row;\n  }\n`;\nconst Head = styled.div`\nfont-size: 36px;\n  text-align: center;\n  margin-top: 18%;\n  font-weight: bold;\n  border-top: 1px solid #000;\n  background: linear-gradient(\n    45deg,\n    #f09433 0%,\n    #e6683c 25%,\n    #dc2743 50%,\n    #cc2366 75%,\n    #bc1888 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nconst Image = styled.img`\n  max-width: 600px !important;\n  height: auto;\n`;\n\nconst Content = styled.div`\n  padding: 10px;\n`;\n\nconst Heading = styled.div`\n  font-size: 32px;\n  font-weight: bolder;\n  text-align: center;\n`;\nconst Para = styled.div`\n  font-size: 20px;\n  letter-spacing: 2px;\n  margin-top: 30px !important;\n  padding: 40px;\n  background: linear-gradient(\n    45deg,\n    #f09433 0%,\n    #e6683c 25%,\n    #dc2743 50%,\n    #cc2366 75%,\n    #bc1888 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  text-shadow: 2px 0 #e6683c;\n`;\nexport default Profile;\n","const LoadedStory = (props) => {\n    const responseObj = props.responseObj;\n\n    // If no such account found\n    if (responseObj.message) {\n        return (\n            <div className=\"error-page\">\n                <h1>No such account found !</h1>\n                <p>{responseObj.message}</p>\n            </div>\n        );\n    }\n    const storyArray = responseObj.story.data;\n\n    // If account exists but no story uploaded\n    if (!storyArray.length) {\n        return (\n            <>\n                <header className=\"user-info\">\n                    <img\n                        src={responseObj.profile_pic_url}\n                        className=\"profile-picture\"\n                        alt=\"Profile\"\n                    />\n                    <div className=\"right-section\">\n                        <h3>{responseObj.username}</h3>\n                        <p>{responseObj.full_name}</p>\n                    </div>\n                </header>\n                <div className=\"error-page\">\n                    <h1>No story found !</h1>\n                    <p>User has not uploaded any story !</p>\n                </div>\n            </>\n        );\n    }\n\n    // When User found and story is uploaded\n    return (\n        <>\n            <header className=\"user-info\">\n                <img\n                    src={responseObj.profile_pic_url}\n                    className=\"profile-picture\"\n                    alt=\"Profile\"\n                />\n                <div className=\"right-section\">\n                    <h3>{responseObj.username}</h3>\n                    <p>{responseObj.full_name}</p>\n                </div>\n            </header>\n            <section className=\"story-list\">\n                {storyArray.map((element, index) => {\n                    if (element.media_type === 2) {\n                        return (\n                            <video className=\"story-item\" key={index} controls>\n                                <source\n                                    src={element.video_versions[0].url}\n                                    className=\"story-media\"\n                                    type=\"video/webm\"\n                                ></source>\n                            </video>\n                        );\n                    } else {\n                        return (\n                            <div className=\"story-item\" key={index}>\n                                <img\n                                    src={\n                                        element.image_versions2.candidates[0]\n                                            .url\n                                    }\n                                    className=\"story-media\"\n                                    alt=\"\"\n                                />\n                            </div>\n                        );\n                    }\n                })}\n            </section>\n        </>\n    );\n};\n\nexport default LoadedStory;\n","import { useState } from \"react\";\nimport \"./Styles/story.css\";\nimport LoadingAnimation from \"./LoadingAnimation\";\nimport SearchForm from \"./Header/SearchForm\";\nimport LoadedStory from \"./LoadedResponses/LoadedStory\";\nimport styled from \"styled-components\";\nimport { device } from \"./device\";\n\nconst Story = (props) => {\n  const [userId, setUserId] = useState(\"\");\n  const [responseObj, setResponseObj] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  // const [storyArray, setStoryArray] = useState([]);\n\n  function submitHandler(e) {\n    e.preventDefault();\n    if (userId.length === 0) {\n      alert(\"Empty Username !\");\n      return;\n    }\n    setIsLoading(true);\n    fetchProfile();\n  }\n\n  function onChangehandler(e) {\n    setUserId(e.target.value);\n  }\n\n  async function fetchProfile() {\n    const id = userId;\n    const response = await fetch(\n      `https://instagram-bulk-profile-scrapper.p.rapidapi.com/clients/api/ig/ig_profile?ig=${id}&response_type=story&corsEnabled=true`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d80191008amsh24d66a7bd4dba75p1522dcjsn7c81675e726a\",\n          \"x-rapidapi-host\": \"instagram-bulk-profile-scrapper.p.rapidapi.com\",\n        },\n      }\n    );\n    const data = await response.json();\n    setResponseObj(data[0]);\n    setIsLoading(false);\n    setHasLoaded(true);\n  }\n\n  return (\n    <>\n      <section id=\"story-section\">\n        <SearchForm\n          submitHandler={submitHandler}\n          onChangehandler={onChangehandler}\n          placeholder=\"Enter Username\"\n        />\n\n        <main className=\"story-response\">\n          {isLoading && <LoadingAnimation />}\n          {hasLoaded && <LoadedStory responseObj={responseObj} />}\n        </main>\n      </section>\n\n      <Head>Insta Story Downloader</Head>\n      <CardWrapper>\n        <Image\n          src={`https://miro.medium.com/max/2000/1*QXCIerDrCbTNylkvPx3Ung.png`}\n        />\n        <Content>\n          <Heading>Download Public Profile Stories</Heading>\n          <Para>\n          Stories! Stories we listen to from childhood but this era is the digital era, where the way of stories is change and in this era, the way story express is also changed in the form of photos and videos on social media platforms and Instagram is one of them.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://calistu.com/blog/wp-content/uploads/2021/09/Instagram-story-downloader-1200x675.jpg`}\n        />\n        <Content>\n          <Heading>HD Format Download</Heading>\n          <Para>\n          Our story saver is different from other Insta Story downloading sites. We introduce a new feature for more simplify your downloading. Sometimes we miss our friends & family members but we can’t tell them and we have so much care for them and want to see their Instagram Stories without knowing them. So, we update this feature for you.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://s3-us-west-2.amazonaws.com/jumpermedia.co/uploads/2020/02/image3-1.jpg`}\n        />\n        <Content>\n          <Heading>No signup/Login</Heading>\n          <Para>\n          Now you can download any public profile Stories anonymously without knowing them. You just paste any Public Instagram account profile URL inside the Story Saver input box and click the search button. InstaFintsa automatically syncs its stories and provides you with downloadable links.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://verloop.io/wp-content/uploads/Instagram-API-The-Ultimate-Guide-1200x600.jpg`}\n        />\n        <Content>\n          <Heading>No Instagram API</Heading>\n          <Para>\n            This webapp uses Instagram Bulk Profile Scrapper from Rapid API\n            which allows limited No of Download Per Day i.e 250 Request Per day.\n            When I will have money Ill Buy premium version of the API but its\n            good for personal use.\n          </Para>\n        </Content>\n      </CardWrapper>\n    </>\n  );\n};\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid gray;\n  box-shadow: 5px 5px #ccc;\n  padding: 10px;\n  margin: 10px;\n  @media ${device.laptop} {\n    flex-direction: row;\n  }\n`;\nconst Head = styled.div`\nfont-size: 36px;\n  text-align: center;\n  margin-top: 18%;\n  font-weight: bold;\n  border-top: 1px solid #000;\n  background: linear-gradient(\n    45deg,\n    #f09433 0%,\n    #e6683c 25%,\n    #dc2743 50%,\n    #cc2366 75%,\n    #bc1888 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nconst Image = styled.img`\n  max-width: 600px !important;\n  height: auto;\n`;\n\nconst Content = styled.div`\n  padding: 10px;\n`;\n\nconst Heading = styled.div`\n  font-size: 32px;\n  font-weight: bolder;\n  text-align: center;\n`;\nconst Para = styled.div`\n  font-size: 20px;\n  letter-spacing: 2px;\n  margin-top: 30px !important;\n  padding: 40px;\n  background: linear-gradient(\n    45deg,\n    #f09433 0%,\n    #e6683c 25%,\n    #dc2743 50%,\n    #cc2366 75%,\n    #bc1888 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  text-shadow: 2px 0 #e6683c;\n`;\nexport default Story;\n","const LoadedReels = (props) => {\n    let responseObj = props.responseObj;\n    // let downloadFileName = responseObj.user.username;\n\n    let downloadFileName = \"reel.mp4\";\n    console.log(responseObj);\n\n    // If no reel found\n    if (responseObj.message) {\n        return (\n            <div className=\"error-page\">\n                <h1>No reel found !</h1>\n                <p>Make sure you've entered proper link.</p>\n            </div>\n        );\n    }\n    responseObj = responseObj.items[0];\n\n    return (\n        <>\n            <header className=\"reel-header\">\n                <div className=\"reel-creator\">\n                    <img\n                        src={responseObj.user.profile_pic_url}\n                        className=\"profile-picture\"\n                        alt=\"profile\"\n                    />\n                    <div className=\"creator-info\">\n                        <h3>{responseObj.user.username}</h3>\n                        <p>{responseObj.user.full_name}</p>\n                    </div>\n                </div>\n               \n            </header>\n            <video controls className=\"reel-video\">\n                <source\n                    src={responseObj.video_versions[0].url}\n                    type=\"video/webm\"\n                    download={downloadFileName}\n                ></source>\n            </video>\n           \n            {/* <p className=\"reel-caption\">{responseObj.caption.text}</p> */}\n\n\n\n          \n        </>\n    );\n};\n\n\nexport default LoadedReels;\n","import { useState } from \"react\";\nimport \"./Styles/reel.css\";\nimport styled from \"styled-components\";\nimport LoadingAnimation from \"./LoadingAnimation\";\nimport SearchForm from \"./Header/SearchForm\";\nimport LoadedReels from \"./LoadedResponses/LoadedReels\";\nimport { device } from \"./device\";\nconst Reels = (props) => {\n    const [reelUrl, setReelUrl] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    const [hasLoaded, setHasLoaded] = useState(false);\n    const [responseObj, setResponseObj] = useState();\n\n    function getId(url) {\n        return url.slice(31, 42);\n    }\n\n    function onChangehandler(e) {\n        setReelUrl(e.target.value);\n    }\n\n    function submitHandler(e) {\n        e.preventDefault();\n        if (reelUrl.length === 0) {\n            alert(\"Empty Reel link !\");\n            return;\n        }\n        setIsLoading(true);\n        fetchReel();\n    }\n\n    async function fetchReel() {\n        const reelId = getId(reelUrl);\n        if (reelId.length !== 11) {\n            alert(\"Invaid Reel URL\");\n            setIsLoading(false);\n            return;\n        }\n        const response = await fetch(\n            `https://instagram-bulk-profile-scrapper.p.rapidapi.com/clients/api/ig/media_by_id?shortcode=${reelId}&response_type=reels&corsEnabled=true`,\n            {\n                method: \"GET\",\n                headers: {\n                    \"x-rapidapi-key\": \"d80191008amsh24d66a7bd4dba75p1522dcjsn7c81675e726a\",\n                    \"x-rapidapi-host\": \"instagram-bulk-profile-scrapper.p.rapidapi.com\",\n                },\n            }\n        );\n        const data = await response.json();\n        setResponseObj(data[0]);\n        setIsLoading(false);\n        setHasLoaded(true);\n    }\n\n    return (\n        <>\n\n\n        <section id=\"reel-section\">\n            <SearchForm\n                submitHandler={submitHandler}\n                onChangehandler={onChangehandler}\n                placeholder=\"Enter Reel link\"\n            />\n\n            <div className=\"reel-response\">\n                {isLoading && <LoadingAnimation />}\n                {hasLoaded && <LoadedReels responseObj={responseObj} />}\n            </div>\n        </section>\n        <Head>Reel features</Head>\n  <CardWrapper>\n     \n  <Image src={`https://igram.io/static/img/app-instagram-feed.jpg`} />\n  <Content>\n  <Heading>Unlimited Download</Heading>\n  <Para>\n  A free and fast tool for Instagram reels video download in HD. With this Instagram reels downloader, you can save reels video in MP4 high quality in your phone gallery without providing your log in details. The Instagram reels downloader is a free service for everyone and you can unlimitedly download reels video as you want.</Para>\n  </Content>\n  \n</CardWrapper>\n<CardWrapper>\n  <Image src={`https://igram.io/static/img/instagram-video.jpg`} />\n  <Content>\n  <Heading>No SignUp/Login</Heading>\n  <Para>\n  The best part of Reels video downloader is that we do not use Instagram API, so you no need to worry about providing your credentials for downloading the reels video. You are free to use our reels video download services without creating an account for login or signup.</Para>\n  </Content>\n  \n</CardWrapper>\n<CardWrapper>\n  <Image src={`https://igram.io/static/img/applications-instagram-igtv.jpg`} />\n  <Content>\n  <Heading>Fast Download</Heading>\n  <Para>\n  Before using the download Instagram reels video service, you need to have a link to that Instagram reel video which you want to download and paste that link in the Instagram reels downloader input box. The Instagram reels downloader will automatically synchronize the video and generate a reels video downloading link for you.</Para>\n  </Content>\n  \n</CardWrapper>\n<CardWrapper>\n  <Image src={`https://verloop.io/wp-content/uploads/Instagram-API-The-Ultimate-Guide-1200x600.jpg`} />\n  <Content>\n  <Heading>No Instagram API</Heading>\n  <Para>\n  This webapp uses Instagram Bulk Profile Scrapper from Rapid API which allows limited No of Download Per Day i.e 250 Request Per day. When I will have money Ill Buy premium version of the API but its good for personal use.</Para>\n  </Content>\n  \n</CardWrapper>\n\n\n\n </>\n    );\n};\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid gray;\n  box-shadow: 5px 5px #ccc;\n  padding: 10px;\n  margin: 10px;\n  @media ${device.laptop} {\n    flex-direction: row;\n  }\n`;\nconst Head = styled.div`\nfont-size: 36px;\ntext-align: center;\nmargin-top: 10%;\nfont-weight: bold;\nborder-top: 1px solid #000;\nbackground: linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%); \n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;\n`\n\nconst Image = styled.img`\nmax-width: 600px !important;\n  height: auto;\n`;\n\nconst Content = styled.div`padding: 10px;\n\n`;\n\nconst Heading = styled.div`\nfont-size: 32px;\nfont-weight: bolder;\ntext-align: center\n\n`\nconst Para = styled.div`\nfont-size: 20px;\nletter-spacing: 2px;\nmargin-top: 30px !important;\npadding: 40px;\nbackground: linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%); \n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;   \n\ntext-shadow: 2px 0 #e6683c;\n`\n\n\n\n\nexport default Reels;\n","const LoadedPost = (props) => {\n    let responseObj = props.responseObj;\n\n    // If no post found\n    if (responseObj.message) {\n        return (\n            <div className=\"error-page\">\n                <h1>No post found !</h1>\n                <p>Make sure you've entered proper link.</p>\n            </div>\n        );\n    }\n    responseObj = responseObj.items[0];\n\n    return (\n        <>\n        <div className=\"post-head\">\n            <header className=\"reel-header\">\n                <div className=\"reel-creator\">\n                    <img\n                        src={responseObj.user.profile_pic_url}\n                        className=\"profile-picture\"\n                        alt=\"profile\"\n                    />\n                    <div className=\"creator-info\">\n                        <h3>{responseObj.user.username}</h3>\n                        <p>{responseObj.user.full_name}</p>\n                    </div>\n                </div>\n               \n            </header>\n\n            <article className=\"post-section\">\n                {responseObj.media_type === 2 && (\n                    <video className=\"post-media\" controls>\n                        <source\n                            src={responseObj.video_versions[0].url}\n                            type=\"video/webm\"\n                        ></source>\n                    </video>\n                )}\n                {responseObj.media_type === 8 && (\n                    <img\n                        src={responseObj.carousel_media[0].image_versions2.candidates[0].url}\n                        className=\"post-media\"\n                        alt=\"post media\"\n                    />\n                )}\n            </article>\n            <p className=\"post-caption\">{responseObj.caption.text}</p>\n            </div>\n        </>\n    );\n};\n\nexport default LoadedPost;\n","import { useState } from \"react\";\nimport \"./Styles/post.css\";\nimport LoadingAnimation from \"./LoadingAnimation\";\nimport SearchForm from \"./Header/SearchForm\";\nimport LoadedPost from \"./LoadedResponses/LoadedPost\";\nimport styled from \"styled-components\";\nimport { device } from \"./device\";\n\nconst Post = (props) => {\n  const [postUrl, setPostUrl] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [responseObj, setResponseObj] = useState();\n\n  function getId(url) {\n    return url.slice(28, 39);\n  }\n\n  function onChangehandler(e) {\n    setPostUrl(e.target.value);\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    if (postUrl.length === 0) {\n      alert(\"Empty Post link !\");\n      return;\n    }\n    setIsLoading(true);\n    fetchPost();\n  }\n\n  async function fetchPost() {\n    const postId = getId(postUrl);\n    const response = await fetch(\n      `https://instagram-bulk-profile-scrapper.p.rapidapi.com/clients/api/ig/media_by_id?shortcode=${postId}&response_type=feeds&corsEnabled=true`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d80191008amsh24d66a7bd4dba75p1522dcjsn7c81675e726a\",\n          \"x-rapidapi-host\": \"instagram-bulk-profile-scrapper.p.rapidapi.com\",\n        },\n      }\n    );\n    const data = await response.json();\n    setResponseObj(data[0]);\n    setIsLoading(false);\n    setHasLoaded(true);\n  }\n\n  return (\n    <>\n      <section id=\"post-section\">\n        <SearchForm\n          submitHandler={submitHandler}\n          onChangehandler={onChangehandler}\n          placeholder=\"Enter post link\"\n        />\n\n        <div className=\"post-response\">\n          {isLoading && <LoadingAnimation />}\n          {hasLoaded && <LoadedPost responseObj={responseObj} />}\n        </div>\n      </section>\n      <Head>Insta Post Downloader</Head>\n      <CardWrapper>\n        <Image\n          src={`https://i.gadgets360cdn.com/large/instagram_download_anything_1592469191941.jpg`}\n        />\n        <Content>\n          <Heading>Download Post/Videos</Heading>\n          <Para>\n          We introduce a new feature that provides you online Instagram photo download service. Instagram Photo downloader is a web-based tool that is highly secure and safe and easy to use. This insta image downloader tool does not require any login signup because we use Instagram API so, you are free to use it without providing any login credentials.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://www.postplanner.com/hubfs/what-to-post-on-instagram.png`}\n        />\n        <Content>\n          <Heading>HD Quality</Heading>\n          <Para>\n          Instagram image downloader also provides you to download multiple Instagram images or photos. You have seems that many users and creator on Instagram post multiple photos on profile and you want to download all Instagram images with a single click. It is very easy with the photo downloader tool you only have to copy the URL of the Instagram photos which you want to download and paste the URL in the Instagram Photo Downloader downloading box.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://9to5mac.com/wp-content/uploads/sites/6/2021/11/Instagram-Reels.jpg?quality=82&strip=all`}\n        />\n        <Content>\n          <Heading>Unlimited Download</Heading>\n          <Para>\n          No, there is no limit to download Instagram images at all. Instagram photos are freely downloadable on our website but we don’t have any right to these images or photos all the credit goes to the creator of that profile who uploads the photo, pic or images, etc.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://verloop.io/wp-content/uploads/Instagram-API-The-Ultimate-Guide-1200x600.jpg`}\n        />\n        <Content>\n          <Heading>No Instagram API</Heading>\n          <Para>\n            This webapp uses Instagram Bulk Profile Scrapper from Rapid API\n            which allows limited No of Download Per Day i.e 250 Request Per day.\n            When I will have money Ill Buy premium version of the API but its\n            good for personal use.\n          </Para>\n        </Content>\n      </CardWrapper>\n    </>\n  );\n};\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid gray;\n  box-shadow: 5px 5px #ccc;\n  padding: 10px;\n  margin: 10px;\n  @media ${device.laptop} {\n    flex-direction: row;\n  }\n`;\nconst Head = styled.div`\nfont-size: 36px;\n  text-align: center;\n  margin-top: 10%;\n  font-weight: bold;\n  border-top: 1px solid #000;\n  background: linear-gradient(\n    45deg,\n    #f09433 0%,\n    #e6683c 25%,\n    #dc2743 50%,\n    #cc2366 75%,\n    #bc1888 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nconst Image = styled.img`\n  max-width: 600px !important;\n  height: auto;\n`;\n\nconst Content = styled.div`\n  padding: 10px;\n`;\n\nconst Heading = styled.div`\n  font-size: 32px;\n  font-weight: bolder;\n  text-align: center;\n`;\nconst Para = styled.div`\n  font-size: 20px;\n  letter-spacing: 2px;\n  margin-top: 30px !important;\n  padding: 40px;\n  background: linear-gradient(\n    45deg,\n    #f09433 0%,\n    #e6683c 25%,\n    #dc2743 50%,\n    #cc2366 75%,\n    #bc1888 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  text-shadow: 2px 0 #e6683c;\n`;\nexport default Post;\n","const LoadedIgtv = (props) => {\n    let responseObj = props.responseObj;\n    \n    // If no post found\n    if (responseObj.message) {\n        return (\n            <div className=\"error-page\">\n                <h1>No IGTV found !</h1>\n                <p>Make sure you've entered proper link.</p>\n            </div>\n        );\n    }\n    responseObj = responseObj.items[0];\n\n    return (\n        <>\n            <header className=\"reel-header\">\n                <div className=\"reel-creator\">\n                    <img\n                        src={responseObj.user.profile_pic_url}\n                        className=\"profile-picture\"\n                        alt=\"profile\"\n                    />\n                    <div className=\"creator-info\">\n                        <h3>{responseObj.user.username}</h3>\n                        <p>{responseObj.user.full_name}</p>\n                    </div>\n                </div>\n                \n            </header>\n\n            <article className=\"post-section\">\n                {responseObj.media_type === 2 && (\n                    <video className=\"post-media\" controls>\n                        <source\n                            src={responseObj.video_versions[0].url}\n                            type=\"video/webm\"\n                        ></source>\n                    </video>\n                )}\n                {responseObj.media_type === 1 && (\n                    <img\n                        src={responseObj.image_versions2.candidates[0].url}\n                        className=\"post-media\"\n                        alt=\"\"\n                    />\n                )}\n            </article>\n            <p className=\"post-caption\">{responseObj.caption.text}</p>\n        </>\n    );\n};\n\nexport default LoadedIgtv;\n","import { useState } from \"react\";\nimport \"./Styles/post.css\";\nimport LoadingAnimation from \"./LoadingAnimation\";\nimport SearchForm from \"./Header/SearchForm\";\nimport LoadedIgtv from \"./LoadedResponses/LoadedIgtv\";\nimport styled from \"styled-components\";\nimport { device } from \"./device\";\n\nconst Igtv = (props) => {\n  const [igtvUrl, setIgtvUrl] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [responseObj, setResponseObj] = useState();\n  // const [error, setError] = useState(false);\n  function getId(url) {\n    return url.slice(29, 40);\n  }\n\n  function onChangehandler(e) {\n    setIgtvUrl(e.target.value);\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    if (igtvUrl.length === 0) {\n      alert(\"Empty Post link !\");\n      return;\n    }\n    setIsLoading(true);\n    fetchPost();\n  }\n\n  async function fetchPost() {\n    const igtvId = getId(igtvUrl);\n\n    const response = await fetch(\n      `https://instagram-bulk-profile-scrapper.p.rapidapi.com/clients/api/ig/media_by_id?shortcode=${igtvId}&response_type=feeds&corsEnabled=true`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d80191008amsh24d66a7bd4dba75p1522dcjsn7c81675e726a\",\n          \"x-rapidapi-host\": \"instagram-bulk-profile-scrapper.p.rapidapi.com\",\n        },\n      }\n    );\n    const data = await response.json();\n    setResponseObj(data[0]);\n    setHasLoaded(true);\n    setIsLoading(false);\n  }\n\n  return (\n    <>\n      <section id=\"post-section\">\n        <SearchForm\n          submitHandler={submitHandler}\n          onChangehandler={onChangehandler}\n          placeholder=\"Enter IGTV link\"\n        />\n\n        <div className=\"post-response\">\n          {isLoading && <LoadingAnimation />}\n          {hasLoaded && <LoadedIgtv responseObj={responseObj} />}\n        </div>\n      </section>\n      <Head>IGTV Downloader</Head>\n      <CardWrapper>\n        <Image\n          src={`https://www.instagramsave.com/ogimage/instagram-igtv-downloader.png`}\n        />\n        <Content>\n          <Heading>High-quality IGTV</Heading>\n          <Para>\n          Use go-to Instagram Downloader to download IGTV to your device and to enjoy it any time, even if there is no WiFi. Poor Wifi can piss on parade. Avoid it by saving IGTV on computer or phone. Do it with no hassle in no time and without quality loss.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://img.olhardigital.com.br/wp-content/uploads/2019/05/20190521093121-860x450.jpg`}\n        />\n        <Content>\n          <Heading>Use for free</Heading>\n          <Para>\n          It is a unique service with which you are able to save all IGTV to your phones, tablets, and laptops and watch them any time. The unique development makes it possible to save high-resolution content of any public account.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://www.socialbakers.com/website/storage/2019/11/1537471182-og-blog-mordecai_igtv.jpg`}\n        />\n        <Content>\n          <Heading>Unlimited Download</Heading>\n          <Para>\n          You can use Instagram IGTV Downloader without fear of being fined. The content published on Instagram is public and can be legally used offline. Clips will be displayed in your phone Gallery.\n          </Para>\n        </Content>\n      </CardWrapper>\n      <CardWrapper>\n        <Image\n          src={`https://verloop.io/wp-content/uploads/Instagram-API-The-Ultimate-Guide-1200x600.jpg`}\n        />\n        <Content>\n          <Heading>No Instagram API</Heading>\n          <Para>\n            This webapp uses Instagram Bulk Profile Scrapper from Rapid API\n            which allows limited No of Download Per Day i.e 250 Request Per day.\n            When I will have money Ill Buy premium version of the API but its\n            good for personal use.\n          </Para>\n        </Content>\n      </CardWrapper>\n    </>\n  );\n};\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid gray;\n  box-shadow: 5px 5px #ccc;\n  padding: 10px;\n  margin: 10px;\n  @media ${device.laptop} {\n    flex-direction: row;\n  }\n`;\nconst Head = styled.div`\nfont-size: 36px;\n  text-align: center;\n  margin-top: 10%;\n  font-weight: bold;\n  border-top: 1px solid #000;\n  background: linear-gradient(\n    45deg,\n    #f09433 0%,\n    #e6683c 25%,\n    #dc2743 50%,\n    #cc2366 75%,\n    #bc1888 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nconst Image = styled.img`\n  max-width: 600px !important;\n  height: auto;\n`;\n\nconst Content = styled.div`\n  padding: 10px;\n`;\n\nconst Heading = styled.div`\n  font-size: 32px;\n  font-weight: bolder;\n  text-align: center;\n`;\nconst Para = styled.div`\n  font-size: 20px;\n  letter-spacing: 2px;\n  margin-top: 30px !important;\n  padding: 40px;\n  background: linear-gradient(\n    45deg,\n    #f09433 0%,\n    #e6683c 25%,\n    #dc2743 50%,\n    #cc2366 75%,\n    #bc1888 100%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\n  text-shadow: 2px 0 #e6683c;\n`;\nexport default Igtv;\n","export default __webpack_public_path__ + \"static/media/heart.419dbd7a.svg\";","export default __webpack_public_path__ + \"static/media/plays.dfa5536f.svg\";","import Heart from \"../../Media/heart.svg\";\r\nimport Plays from \"../../Media/plays.svg\";\r\n\r\nconst LoadedFeed = (props) => {\r\n    const responseObj = props.responseObj;\r\n\r\n    // If no such account found\r\n    if (responseObj.message) {\r\n        return (\r\n            <div className=\"error-page\">\r\n                <h1>No such account found !</h1>\r\n                <p>{responseObj.message}</p>\r\n            </div>\r\n        );\r\n    }\r\n    const storyArray = responseObj.feed.data;\r\n \r\n   \r\n    if (!storyArray) {\r\n        return (\r\n            <>\r\n                <header className=\"user-info\">\r\n                    <img\r\n                        src={responseObj.profile_pic_url}\r\n                        className=\"profile-picture\"\r\n                        alt=\"Profile\"\r\n                    />\r\n                    <div className=\"right-section\">\r\n                        <h3>{responseObj.username}</h3>\r\n                        <p>{responseObj.full_name}</p>\r\n                    </div>\r\n                </header>\r\n                <div className=\"error-page\">\r\n                    <h1>No profile Found</h1>\r\n                    <p>User has Private Profile</p>\r\n                </div>\r\n               \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n           <article className=\"profile-description\">\r\n                <div className=\"profile-header\">\r\n                    <img\r\n                        src={responseObj.profile_pic_url}\r\n                        className=\"profile-picture\"\r\n                        alt=\"Profile\"\r\n                    />\r\n                    <section className=\"profile-counts\">\r\n                        <div className=\"media-count\">\r\n                            <h3>{responseObj.media_count}</h3>\r\n                            <p>Posts</p>\r\n                        </div>\r\n                        <div className=\"follower-count\">\r\n                            <h3>{responseObj.follower_count}</h3>\r\n                            <p>Followers</p>\r\n                        </div>\r\n                        <div className=\"following-count\">\r\n                            <h3>{responseObj.following_count}</h3>\r\n                            <p>Followings</p>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </article>\r\n            <section className=\"user-intro\">\r\n                <h3 className=\"username\">Username : {responseObj.username}</h3>\r\n                <p className=\"fullname\">Full Name : {responseObj.full_name}</p>\r\n                <p className=\"bio\">Profile Bio : {responseObj.biography}</p>\r\n            </section>\r\n            <section className=\"story-list\">\r\n                {storyArray.map((element, index) => {\r\n       \r\n                    if (element.media_type === 2) {\r\n                        return (\r\n                            <>\r\n                             <div className=\"story-item story-box\">\r\n                            <video className=\"story-item\" key={index} controls>\r\n                                <source\r\n                                    src={element.video_versions[0].url}\r\n                                    className=\"story-media\"\r\n                                    type=\"video/webm\"\r\n                                ></source>\r\n                                \r\n                            </video>\r\n                            <div className = \"likes\">\r\n                                <div className = \"plays\">\r\n                                <img src={Plays} className=\"nav-icons\" alt=\"search Story\" />\r\n                                 <p>Plays : {element.play_count}</p>\r\n                                </div><br/>\r\n                                <div className = \"like-count\">\r\n                                <img src={Heart} className=\"nav-icons\" alt=\"search Story\" />\r\n                                <p>Likes : {element.like_count}</p>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                           \r\n                            </div>\r\n                            </>\r\n                        );\r\n                        \r\n                    } \r\n                    if (element.media_type === 1 ){\r\n                        return(\r\n                            <>\r\n                            <div className=\"story-item story-box\">\r\n                            <img\r\n                        src={element.image_versions2.candidates[0].url}\r\n                        className=\"post-media\"\r\n                        alt=\"post media\"\r\n                    />\r\n                           <div className = \"likes\">\r\n                               <div className = \"plays\">\r\n                               <img src={Plays} className=\"nav-icons\" alt=\"search Story\" />\r\n                                <p>comments : {element.comment_count}</p>\r\n                               </div><br/>\r\n                               <div className = \"like-count\">\r\n                               <img src={Heart} className=\"nav-icons\" alt=\"search Story\" />\r\n                               <p>Likes : {element.like_count}</p>\r\n                               </div>\r\n                           </div>\r\n                           <br />\r\n                          \r\n                           </div>\r\n                           </>\r\n                        )\r\n                    }\r\n                    if (element.media_type === 8) {\r\n                        return(\r\n                            <>\r\n                            <div className=\"story-item story-box\">\r\n                            <img\r\n                        src={element.carousel_media[0].image_versions2.candidates[0].url}\r\n                        className=\"post-media\"\r\n                        alt=\"post media\"\r\n                    />\r\n                           <div className = \"likes\">\r\n                               <div className = \"plays\">\r\n                               <img src={Plays} className=\"nav-icons\" alt=\"search Story\" />\r\n                                <p>comments : {element.comment_count}</p>\r\n                               </div><br/>\r\n                               <div className = \"like-count\">\r\n                               <img src={Heart} className=\"nav-icons\" alt=\"search Story\" />\r\n                               <p>Likes : {element.like_count}</p>\r\n                               </div>\r\n                           </div>\r\n                           <br />\r\n                          \r\n                           </div>\r\n                           </>\r\n                        )\r\n                    }\r\n                   \r\n                })}\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoadedFeed;\r\n","import { useState } from \"react\";\r\nimport LoadingAnimation from \"./LoadingAnimation\";\r\nimport SearchForm from \"./Header/SearchForm\";\r\nimport \"./Styles/feed.css\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"./device\";\r\nimport LoadedFeed from \"./LoadedResponses/LoadedFeed\";\r\nconst Feed = () => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [responseObj, setResponseObj] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    if (userId.length === 0) {\r\n      alert(\"Empty Username !\");\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    fetchProfile();\r\n  }\r\n\r\n  function onChangehandler(e) {\r\n    setUserId(e.target.value);\r\n  }\r\n  async function fetchProfile() {\r\n    const id = userId;\r\n    const response = await fetch(\r\n      `https://instagram-bulk-profile-scrapper.p.rapidapi.com/clients/api/ig/ig_profile?ig=${id}&response_type=feeds&corsEnabled=true`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            \"d80191008amsh24d66a7bd4dba75p1522dcjsn7c81675e726a\",\r\n          \"x-rapidapi-host\": \"instagram-bulk-profile-scrapper.p.rapidapi.com\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    setResponseObj(data[0]);\r\n    setIsLoading(false);\r\n    setHasLoaded(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section id=\"story-section\">\r\n        <SearchForm\r\n          submitHandler={submitHandler}\r\n          onChangehandler={onChangehandler}\r\n          placeholder=\"Enter Username\"\r\n        />\r\n\r\n        <main className=\"story-response\">\r\n          {isLoading && <LoadingAnimation />}\r\n          {hasLoaded && <LoadedFeed responseObj={responseObj} />}\r\n        </main>\r\n      </section>\r\n      <Head>Profile Stalker</Head>\r\n      <CardWrapper>\r\n        <Image src={`https://uttertechnology.com/wp-content/webpc-passthru.php?src=https://uttertechnology.com/wp-content/uploads/2021/09/acastro_190919_1777_instagram_0001.0.jpg&nocache=1`} />\r\n        <Content>\r\n          <Heading>Stalk Profile</Heading>\r\n          <Para>\r\n          An Instagram stalker, or private viewer, lets you discover profiles on Instagram without login. This service is online so no additional downloads are needed. You can search any public account you are interested in by typing it in the search bar.\r\n          </Para>\r\n        </Content>\r\n      </CardWrapper>\r\n      <CardWrapper>\r\n        <Image src={`https://1.bp.blogspot.com/-kXpnVoOgnUU/YUoveCZHDJI/AAAAAAAAK9U/W6CSrhWfelASNNpIQYHS0bA2kPEvXRR_QCNcBGAsYHQ/s1600/know-who-views-Instagram-profile.jpeg`} />\r\n        <Content>\r\n          <Heading>No SignUp/Login</Heading>\r\n          <Para>\r\n          If you wonder whether you can view someone’s Instagram without an account, you have come to the right website. Usually, when you get a link to an Insta post and you tap on it, you first need to sign up. But this Instagram web viewer is what you need if you don’t have an Insta account but want to see someone’s posts.\r\n          </Para>\r\n        </Content>\r\n      </CardWrapper>\r\n      <CardWrapper>\r\n        <Image\r\n          src={`https://www.techprevue.com/wp-content/uploads/2020/07/can-someone-tell-if-you-look-at-their-instagram-1024x683.jpg`}\r\n        />\r\n        <Content>\r\n          <Heading>Fast Download</Heading>\r\n          <Para>\r\n          With a private Instagram photo downloader tool, you can see private content from Instagram. You can find photos of Instagram users without revealing your identity. It is one of the best ways to easily read their blog or content, even if you don’t follow them on Instagram. It is a free online service, so you can get its features without spending any amount.\r\n          </Para>\r\n        </Content>\r\n      </CardWrapper>\r\n      <CardWrapper>\r\n        <Image\r\n          src={`https://verloop.io/wp-content/uploads/Instagram-API-The-Ultimate-Guide-1200x600.jpg`}\r\n        />\r\n        <Content>\r\n          <Heading>No Instagram API</Heading>\r\n          <Para>\r\n            This webapp uses Instagram Bulk Profile Scrapper from Rapid API\r\n            which allows limited No of Download Per Day i.e 250 Request Per day.\r\n            When I will have money Ill Buy premium version of the API but its\r\n            good for personal use.\r\n          </Para>\r\n        </Content>\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid gray;\r\n  box-shadow: 5px 5px #ccc;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\nconst Head = styled.div`\r\n  font-size: 36px;\r\n  text-align: center;\r\n  margin-top: 18%;\r\n  font-weight: bold;\r\n  border-top: 1px solid #000;\r\n  background: linear-gradient(\r\n    45deg,\r\n    #f09433 0%,\r\n    #e6683c 25%,\r\n    #dc2743 50%,\r\n    #cc2366 75%,\r\n    #bc1888 100%\r\n  );\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  max-width: 600px !important;\r\n  height: auto;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  font-size: 32px;\r\n  font-weight: bolder;\r\n  text-align: center;\r\n`;\r\nconst Para = styled.div`\r\n  font-size: 20px;\r\n  letter-spacing: 2px;\r\n  margin-top: 30px !important;\r\n  padding: 40px;\r\n  background: linear-gradient(\r\n    45deg,\r\n    #f09433 0%,\r\n    #e6683c 25%,\r\n    #dc2743 50%,\r\n    #cc2366 75%,\r\n    #bc1888 100%\r\n  );\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n\r\n  text-shadow: 2px 0 #e6683c;\r\n`;\r\n\r\nexport default Feed;\r\n","const Error = () => {\n    return(\n        <div className=\"error-page\">\n            <h1>Error 404</h1>\n            <p>The requested location could not be found</p>\n        </div>\n    )\n}\n\nexport default Error;","import \"../Styles/footer.css\";\nimport styled from \"styled-components\";\nconst Footer = () => {\n    return (\n        <>\n           \n<Head>How to download ?</Head>\n\n\n<Mains>\n  <Cards>\n  <CardItem>\n    <Card>\n<CardImage>\n<Images src={`https://igram.io/static/img/instagram-post-copy-link.jpg`}></Images>\n</CardImage>\n<CardContent>\n<CardTitle>\nCopy the URL\n</CardTitle>\n<CardText>copy the URL of the photo, video, carousel or IGTV.</CardText>\n</CardContent>\n</Card>\n  </CardItem>\n  <CardItem>\n    <Card>\n<CardImage>\n<Images src={`https://igram.io/static/img/instagram-link-insert.jpg`}></Images>\n</CardImage>\n<CardContent>\n<CardTitle>\nPaste the link\n</CardTitle>\n<CardText>Paste link into the Instait field and click the Download button</CardText>\n</CardContent>\n</Card>\n  </CardItem>\n  <CardItem>\n    <Card>\n<CardImage>\n<Images src={`https://igram.io/static/img/results.jpg`}></Images>\n</CardImage>\n<CardContent>\n<CardTitle>\nDownload Successful\n</CardTitle>\n<CardText>Instait will sync your URL and creates a downloadable link</CardText>\n</CardContent>\n</Card>\n  </CardItem>\n  </Cards>\n</Mains>\n \n <Footers>\n   <Wrapper>\n   <Small>&copy;2022 <strong>IGmediaDOWN By Nitin</strong>, Made with ❤️</Small>\n   <FooterNav>\n  <FooterLink target='_blank' href=\"https://github.com/nitinkumar30\">Github Link</FooterLink>\n  <FooterLink target='_blank' href=\"https://www.instagram.com/nitinkumar30.py/\">Instagram Link</FooterLink>\n  <FooterLink target='_blank' href=\"https://nitin-kr.onrender.com/\">Portfolio</FooterLink>\n   </FooterNav>\n   </Wrapper>\n </Footers>\n        </>\n    );\n};\n\nconst Head = styled.div`\nfont-size: 50px;\ntext-align: center;\nfont-weight: bold;\nbackground: linear-gradient(45deg, #f09433 0%,#e6683c 25%,#dc2743 50%,#cc2366 75%,#bc1888 100%); \n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;\n`\n\n\nconst Mains = styled.div `\nmax-width: 1600px;\nmargin: 0 auto;\n\n`\n\nconst Cards = styled.ul `\ndisplay: flex;\nflex-wrap: wrap;\nlist-style: none;\nmargin: 0;\npadding: 0;\n`\n\nconst CardItem = styled.li `\ndisplay: flex;\n\n  padding: 0.7rem;\n  @media (min-width: 40rem) {\n    .cards_item {\n      width: 50%;\n    }\n  }\n  \n  @media (min-width: 56rem) {\n    .cards_item {\n      width: 33.3333%;\n    }\n  }\n`\nconst CardImage = styled.div `\nobject-fit: cover;\n`\nconst Images = styled.img `\n\n \n  \n`\nconst Card = styled.div `\nbackground-color: white;\n  border-radius: 0.25rem;\n  box-shadow: 0 20px 40px -14px rgba(0, 0, 0, 0.25);\n  display: flex;\n  flex-direction: column !important;\n  overflow: hidden;`\n\n  const CardContent = styled.div `\n  padding: 0.5rem;\n  background: linear-gradient(to bottom left, #EF8D9C 40%, #FFC39E 100%);`\n \n  const CardTitle = styled.h2 `\n  color: #ffffff;\n  font-size: 1rem;\n  font-weight: 700;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  margin: 0px;`\n\n  const CardText = styled.p `\n  color: #ffffff;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  margin-bottom: 1.25rem;    \n  font-weight: 400;`\n\nconst Footers = styled.div `\nbackground: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);\n  display: table;\n  width: 100vw;\n  height: 8rem;\n  text-align: center;\n  padding: 1rem;\n  font-family: 'Arial', sans-serif;\n  font-size: .875rem;\n`\n\nconst Wrapper = styled.div `\ndisplay: table-cell;\n  vertical-align: middle;`\n\n  const Small =  styled.div `\n  color: #ccc;\n  letter-spacing: .025rem;\n  margin-bottom: 1.5rem;\n  display: block;`\n\n  const FooterNav = styled.div ``\n\n  const FooterLink = styled.a `\n  color: #fff;\n  text-decoration: none;\n  margin: 0 .5rem;\n  display: inline-block;\n  &:hover{\n    color: #f26896;\n  transition: color .15s ease-in-out;\n  }\n`\nexport default Footer;\n","import { Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header/Header\";\nimport Profile from \"./components/Profile\";\nimport Story from \"./components/Story\";\nimport Reels from \"./components/Reels\";\nimport Post from \"./components/Post\";\nimport Igtv from \"./components/Igtv\";\nimport Feed from \"./components/Feed\";\nimport Error from \"./components/Error\";\nimport Footer from \"./components/Footer/Footer\";\n\nimport \"./App.css\";\nimport \"./components/Styles/commonStyles.css\";\n\n\nconst App = () => {\n    return (\n        <>\n            <Header />\n            <Switch>\n                <Route exact path=\"/igvio/\" component={Feed} />\n                <Route path=\"/igvio/profile\" component={Profile} />\n                <Route path=\"/igvio/story\" component={Story} />\n                <Route path=\"/igvio/reel\" component={Reels} />\n                <Route path=\"/igvio/post\" component={Post} />\n                <Route path=\"/igvio/igtv\" component={Igtv} />\n                <Route path=\"/igvio/feed\" component={Feed} />\n                <Route component={Error} />\n                <Route />\n            </Switch>\n            <Footer />\n        </>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}